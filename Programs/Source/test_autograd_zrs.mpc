from tensor import Tensor
import tensor
program.options_from_args()
ROW=3
COL=3
LENGTH=10

xArray = Array(LENGTH,sfix)
for i in range(0,LENGTH):
    xArray[i]=sfix(i-LENGTH/2)

xMultiArray = MultiArray([ROW, COL], sfix)
for i in range(0,ROW):
    for  j in range(0,COL):
        xMultiArray[i][j] = sfix(i-j)

def test_single_operation(func,Value):
    Value.print_reveal_nested()
    input = Tensor(Value)
    output = getattr(input, func)() 
    tensor.train()
    tensor.reset_op_id()
    output = getattr(input, func)()
    output.backward()
    output.value.print_reveal_nested()
    input.grad.print_reveal_nested()
    tensor.reset_op_id()
    tensor.reset_operation()


# test for Array and MultiArray
def test_sin():  
    test_single_operation('sin',xArray)
    test_single_operation('sin',xMultiArray)

def test_abs():
    test_single_operation('abs',xArray)
    test_single_operation('abs',xMultiArray)

def test_exp():
   # test_single_operation('exp',xArray)
    test_single_operation('exp',xMultiArray)

def test_log():
    test_single_operation('log',xArray)
    test_single_operation('log',xMultiArray)



#test_abs()
test_exp()
test_log()
test_sin()
