'''
n = 10
a = sint.Array(n)
x = sint(0)
@for_range(n)
def _(i):
    global x
    a[i] = i
    x = x+1
a.print_reveal_nested()
actual = x.reveal()
print_ln('expected 10, got %s', actual)
a = sint(2, 4)
b = sint(0, 1)
c = a * b
print_ln("c = %s", c.reveal())
'''

'''
print_ln("Enter your wealth value in tens of thousands of yuan：")
a_0=sfix.get_input_from(0)#获取P0的输入，并赋值给a_0，其数据格式为sfix，即secret fixed number
a_1=sfix.get_input_from(1)#获取P1的输入，并赋值给a_1，其数据格式为sfix，即secret fixed number
print_ln('The comparison between a_0 and a_1:')
if (a_0>a_1).reveal()==1:
    print_ln("a_0>a_1")
else:
    print_ln("a_0<=a_1")
'''

'''
A=sfix.Array(4)
for i in range(4):
    A[i]=sfix.get_input_from(0)

B=sfix.Array(3)
for i in range(3):
    B[i]=sfix.get_input_from(1)

for i in range(4):
    for j in range(3):
        if (A[i]>B[j]).reveal():
            print_ln("A[%s]>B[%s]",i,j)
        else:
            print_ln("A[%s]<=B[%s]",i,j)
'''
n=10
a=sfix(4)
b=sfix(5)
c=a*b+a-b #数据的加减乘除操作
print_ln("the value of c is %s",c.reveal())
ww = Array(100, sint)
dd = Array(100, sint)
for i in range(100):
    ww[i]=1
    dd[i]=2

ss = [sint(i) for i in range(n)] 
ss1 = [sint(i+1) for i in range(n)]
ss2 = [sint(i+1) for i in range(n)]
sd = sint.dot_product(ww, dd) #矩阵的点积操作
sd1 = sint.dot_product(ss, ss2)
print_ln("the dot_product of ww and dd is %s",sd.reveal())
print_ln("the dot_product of ss and ss2 is %s",sd1.reveal())

data = Matrix(3, 2, sfix)
data.assign_all(1)
M = Matrix(2, 2, sfix)
M[0][0] = 0
M[1][0] = 1
M[0][1] = 1
M[1][1] = 0

# matrix multiplication
N=Matrix(3, 2, sfix)
N= data * M



